#!/usr/bin/env python3
"""
Script pour comparer les statistiques entre les versions fran√ßaise et anglaise
du calendrier de semis et r√©coltes du Qu√©bec.
"""

import re
from collections import Counter

def parse_ics_file(filename):
    """Parse un fichier ICS et retourne les statistiques."""
    with open(filename, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Compter les √©v√©nements
    events = re.findall(r'BEGIN:VEVENT.*?END:VEVENT', content, re.DOTALL)
    
    stats = {
        'total_events': len(events),
        'categories': Counter(),
        'types': Counter(),
        'months': Counter()
    }
    
    for event in events:
        # Extraire les cat√©gories
        cat_match = re.search(r'CATEGORIES:(.*)', event)
        if cat_match:
            categories = cat_match.group(1).split(',')
            for cat in categories:
                stats['categories'][cat.strip()] += 1
        
        # Extraire le type d'√©v√©nement du summary
        summary_match = re.search(r'SUMMARY:(.*)', event)
        if summary_match:
            summary = summary_match.group(1)
            if 'Semis' in summary or 'Planting' in summary:
                stats['types']['PLANTING'] += 1
            elif 'r√©colte' in summary or 'Harvest' in summary:
                if 'D√©but' in summary or 'Start' in summary:
                    stats['types']['HARVEST_START'] += 1
                elif 'Fin' in summary or 'End' in summary:
                    stats['types']['HARVEST_END'] += 1
            elif 'Non cultivable' in summary or 'Not Cultivable' in summary or 'Very Limited' in summary or 'Complex' in summary:
                stats['types']['EXCLUSION'] += 1
        
        # Extraire le mois
        date_match = re.search(r'DTSTART;VALUE=DATE:(\d{8})', event)
        if date_match:
            date_str = date_match.group(1)
            month = int(date_str[4:6])
            stats['months'][month] += 1
    
    return stats

def print_comparison():
    """Affiche la comparaison entre les deux versions."""
    print("üìä COMPARAISON DES CALENDRIERS - FRAN√áAIS vs ANGLAIS")
    print("=" * 60)
    
    try:
        stats_fr = parse_ics_file('semis-et-recoltes.ics')
        stats_en = parse_ics_file('planting-and-harvest-quebec.ics')
        
        print(f"\nüìà √âV√âNEMENTS TOTAUX:")
        print(f"Fran√ßais  : {stats_fr['total_events']:3d} √©v√©nements")
        print(f"Anglais   : {stats_en['total_events']:3d} √©v√©nements")
        print(f"Diff√©rence: {abs(stats_fr['total_events'] - stats_en['total_events']):3d}")
        
        print(f"\nüè∑Ô∏è  CAT√âGORIES:")
        all_categories = set(stats_fr['categories'].keys()) | set(stats_en['categories'].keys())
        for cat in sorted(all_categories):
            fr_count = stats_fr['categories'].get(cat, 0)
            en_count = stats_en['categories'].get(cat, 0)
            print(f"{cat:12s}: FR={fr_count:3d} | EN={en_count:3d} | Diff={abs(fr_count-en_count):2d}")
        
        print(f"\nüìÖ TYPES D'√âV√âNEMENTS:")
        all_types = set(stats_fr['types'].keys()) | set(stats_en['types'].keys())
        for event_type in sorted(all_types):
            fr_count = stats_fr['types'].get(event_type, 0)
            en_count = stats_en['types'].get(event_type, 0)
            print(f"{event_type:15s}: FR={fr_count:3d} | EN={en_count:3d} | Diff={abs(fr_count-en_count):2d}")
        
        print(f"\nüìÜ R√âPARTITION PAR MOIS:")
        month_names = ['', 'Jan', 'F√©v', 'Mar', 'Avr', 'Mai', 'Jun', 
                      'Jul', 'Ao√ª', 'Sep', 'Oct', 'Nov', 'D√©c']
        for month in range(1, 13):
            if month in stats_fr['months'] or month in stats_en['months']:
                fr_count = stats_fr['months'].get(month, 0)
                en_count = stats_en['months'].get(month, 0)
                print(f"{month_names[month]:3s} ({month:2d}): FR={fr_count:3d} | EN={en_count:3d} | Diff={abs(fr_count-en_count):2d}")
        
        # V√©rifier la coh√©rence
        print(f"\n‚úÖ V√âRIFICATION DE COH√âRENCE:")
        coherent = True
        
        if stats_fr['total_events'] != stats_en['total_events']:
            print(f"‚ùå Nombre total d'√©v√©nements diff√©rent!")
            coherent = False
        
        for cat in all_categories:
            if stats_fr['categories'].get(cat, 0) != stats_en['categories'].get(cat, 0):
                print(f"‚ùå Cat√©gorie {cat}: diff√©rence d√©tect√©e")
                coherent = False
        
        for event_type in all_types:
            if stats_fr['types'].get(event_type, 0) != stats_en['types'].get(event_type, 0):
                print(f"‚ùå Type {event_type}: diff√©rence d√©tect√©e")
                coherent = False
        
        if coherent:
            print("‚úÖ Les deux calendriers sont parfaitement coh√©rents!")
        else:
            print("‚ö†Ô∏è  Des diff√©rences ont √©t√© d√©tect√©es entre les calendriers.")
    
    except FileNotFoundError as e:
        print(f"‚ùå Erreur: Fichier non trouv√© - {e}")
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

if __name__ == "__main__":
    print_comparison()
